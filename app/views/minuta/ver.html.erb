<html lang="en" ng-app="nectech-app" class="ng-scope fontawesome-i2svg-active fontawesome-i2svg-complete">

<head>
  <style type="text/css">
    svg:not(:root).svg-inline--fa {
      overflow: visible
    }

    .svg-inline--fa {
      display: inline-block;
      font-size: inherit;
      height: 1em;
      overflow: visible;
      vertical-align: -.125em
    }

    .svg-inline--fa.fa-lg {
      vertical-align: -.225em
    }

    .svg-inline--fa.fa-w-1 {
      width: .0625em
    }

    .svg-inline--fa.fa-w-2 {
      width: .125em
    }

    .svg-inline--fa.fa-w-3 {
      width: .1875em
    }

    .svg-inline--fa.fa-w-4 {
      width: .25em
    }

    .svg-inline--fa.fa-w-5 {
      width: .3125em
    }

    .svg-inline--fa.fa-w-6 {
      width: .375em
    }

    .svg-inline--fa.fa-w-7 {
      width: .4375em
    }

    .svg-inline--fa.fa-w-8 {
      width: .5em
    }

    .svg-inline--fa.fa-w-9 {
      width: .5625em
    }

    .svg-inline--fa.fa-w-10 {
      width: .625em
    }

    .svg-inline--fa.fa-w-11 {
      width: .6875em
    }

    .svg-inline--fa.fa-w-12 {
      width: .75em
    }

    .svg-inline--fa.fa-w-13 {
      width: .8125em
    }

    .svg-inline--fa.fa-w-14 {
      width: .875em
    }

    .svg-inline--fa.fa-w-15 {
      width: .9375em
    }

    .svg-inline--fa.fa-w-16 {
      width: 1em
    }

    .svg-inline--fa.fa-w-17 {
      width: 1.0625em
    }

    .svg-inline--fa.fa-w-18 {
      width: 1.125em
    }

    .svg-inline--fa.fa-w-19 {
      width: 1.1875em
    }

    .svg-inline--fa.fa-w-20 {
      width: 1.25em
    }

    .svg-inline--fa.fa-pull-left {
      margin-right: .3em;
      width: auto
    }

    .svg-inline--fa.fa-pull-right {
      margin-left: .3em;
      width: auto
    }

    .svg-inline--fa.fa-border {
      height: 1.5em
    }

    .svg-inline--fa.fa-li {
      width: 2em
    }

    .svg-inline--fa.fa-fw {
      width: 1.25em
    }

    .fa-layers svg.svg-inline--fa {
      bottom: 0;
      left: 0;
      margin: auto;
      position: absolute;
      right: 0;
      top: 0
    }

    .fa-layers {
      display: inline-block;
      height: 1em;
      position: relative;
      text-align: center;
      vertical-align: -.125em;
      width: 1em
    }

    .fa-layers svg.svg-inline--fa {
      -webkit-transform-origin: center center;
      transform-origin: center center
    }

    .fa-layers-counter,
    .fa-layers-text {
      display: inline-block;
      position: absolute;
      text-align: center
    }

    .fa-layers-text {
      left: 50%;
      top: 50%;
      -webkit-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
      -webkit-transform-origin: center center;
      transform-origin: center center
    }

    .fa-layers-counter {
      background-color: #ff253a;
      border-radius: 1em;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      color: #fff;
      height: 1.5em;
      line-height: 1;
      max-width: 5em;
      min-width: 1.5em;
      overflow: hidden;
      padding: .25em;
      right: 0;
      text-overflow: ellipsis;
      top: 0;
      -webkit-transform: scale(.25);
      transform: scale(.25);
      -webkit-transform-origin: top right;
      transform-origin: top right
    }

    .fa-layers-bottom-right {
      bottom: 0;
      right: 0;
      top: auto;
      -webkit-transform: scale(.25);
      transform: scale(.25);
      -webkit-transform-origin: bottom right;
      transform-origin: bottom right
    }

    .fa-layers-bottom-left {
      bottom: 0;
      left: 0;
      right: auto;
      top: auto;
      -webkit-transform: scale(.25);
      transform: scale(.25);
      -webkit-transform-origin: bottom left;
      transform-origin: bottom left
    }

    .fa-layers-top-right {
      right: 0;
      top: 0;
      -webkit-transform: scale(.25);
      transform: scale(.25);
      -webkit-transform-origin: top right;
      transform-origin: top right
    }

    .fa-layers-top-left {
      left: 0;
      right: auto;
      top: 0;
      -webkit-transform: scale(.25);
      transform: scale(.25);
      -webkit-transform-origin: top left;
      transform-origin: top left
    }

    .fa-lg {
      font-size: 1.33333em;
      line-height: .75em;
      vertical-align: -.0667em
    }

    .fa-xs {
      font-size: .75em
    }

    .fa-sm {
      font-size: .875em
    }

    .fa-1x {
      font-size: 1em
    }

    .fa-2x {
      font-size: 2em
    }

    .fa-3x {
      font-size: 3em
    }

    .fa-4x {
      font-size: 4em
    }

    .fa-5x {
      font-size: 5em
    }

    .fa-6x {
      font-size: 6em
    }

    .fa-7x {
      font-size: 7em
    }

    .fa-8x {
      font-size: 8em
    }

    .fa-9x {
      font-size: 9em
    }

    .fa-10x {
      font-size: 10em
    }

    .fa-fw {
      text-align: center;
      width: 1.25em
    }

    .fa-ul {
      list-style-type: none;
      margin-left: 2.5em;
      padding-left: 0
    }

    .fa-ul>li {
      position: relative
    }

    .fa-li {
      left: -2em;
      position: absolute;
      text-align: center;
      width: 2em;
      line-height: inherit
    }

    .fa-border {
      border: solid .08em #eee;
      border-radius: .1em;
      padding: .2em .25em .15em
    }

    .fa-pull-left {
      float: left
    }

    .fa-pull-right {
      float: right
    }

    .fa.fa-pull-left,
    .fab.fa-pull-left,
    .fal.fa-pull-left,
    .far.fa-pull-left,
    .fas.fa-pull-left {
      margin-right: .3em
    }

    .fa.fa-pull-right,
    .fab.fa-pull-right,
    .fal.fa-pull-right,
    .far.fa-pull-right,
    .fas.fa-pull-right {
      margin-left: .3em
    }

    .fa-spin {
      -webkit-animation: fa-spin 2s infinite linear;
      animation: fa-spin 2s infinite linear
    }

    .fa-pulse {
      -webkit-animation: fa-spin 1s infinite steps(8);
      animation: fa-spin 1s infinite steps(8)
    }

    @-webkit-keyframes fa-spin {
      0% {
        -webkit-transform: rotate(0);
        transform: rotate(0)
      }
      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg)
      }
    }

    @keyframes fa-spin {
      0% {
        -webkit-transform: rotate(0);
        transform: rotate(0)
      }
      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg)
      }
    }

    .fa-rotate-90 {
      -webkit-transform: rotate(90deg);
      transform: rotate(90deg)
    }

    .fa-rotate-180 {
      -webkit-transform: rotate(180deg);
      transform: rotate(180deg)
    }

    .fa-rotate-270 {
      -webkit-transform: rotate(270deg);
      transform: rotate(270deg)
    }

    .fa-flip-horizontal {
      -webkit-transform: scale(-1, 1);
      transform: scale(-1, 1)
    }

    .fa-flip-vertical {
      -webkit-transform: scale(1, -1);
      transform: scale(1, -1)
    }

    .fa-flip-horizontal.fa-flip-vertical {
      -webkit-transform: scale(-1, -1);
      transform: scale(-1, -1)
    }

    :root .fa-flip-horizontal,
    :root .fa-flip-vertical,
    :root .fa-rotate-180,
    :root .fa-rotate-270,
    :root .fa-rotate-90 {
      -webkit-filter: none;
      filter: none
    }

    .fa-stack {
      display: inline-block;
      height: 2em;
      position: relative;
      width: 2em
    }

    .fa-stack-1x,
    .fa-stack-2x {
      bottom: 0;
      left: 0;
      margin: auto;
      position: absolute;
      right: 0;
      top: 0
    }

    .svg-inline--fa.fa-stack-1x {
      height: 1em;
      width: 1em
    }

    .svg-inline--fa.fa-stack-2x {
      height: 2em;
      width: 2em
    }

    .fa-inverse {
      color: #fff
    }

    .sr-only {
      border: 0;
      clip: rect(0, 0, 0, 0);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px
    }

    .sr-only-focusable:active,
    .sr-only-focusable:focus {
      clip: auto;
      height: auto;
      margin: 0;
      overflow: visible;
      position: static;
      width: auto
    }
  </style>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="NC Tech | Portal Endomarketing">
  <meta name="author" content="">

  <title>NC Tech | Portal Endomarketing</title>
  
  <link href="https://fonts.googleapis.com/css?family=Roboto+Condensed" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-switch/4.0.0-alpha.1/css/bootstrap-switch.css">
  <script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ="
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-switch/4.0.0-alpha.1/js/bootstrap-switch.js"></script>
  <script defer="" src="https://use.fontawesome.com/releases/v5.0.9/js/all.js" integrity="sha384-8iPTk2s/jMVj81dnzb/iFR2sdA7u06vHJyyLlAd4snFpCl/SnyUjRrbdJsw1pGIl"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/locale/es.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/css/selectize.default.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/js/standalone/selectize.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/js/standalone/selectize.min.js"></script>


  <style id="svelte-1eldsjg-style">
    body>.ui-pnotify {
      position: fixed;
      z-index: 100040
    }

    body>.ui-pnotify.ui-pnotify-modal {
      z-index: 100042
    }

    .ui-pnotify {
      position: absolute;
      height: auto;
      z-index: 1;
      display: none
    }

    .ui-pnotify.ui-pnotify-modal {
      z-index: 3
    }

    .ui-pnotify.ui-pnotify-in {
      display: block
    }

    .ui-pnotify.ui-pnotify-initial-hidden {
      display: block;
      visibility: hidden
    }

    .ui-pnotify.ui-pnotify-move {
      transition: left .5s ease, top .5s ease, right .5s ease, bottom .5s ease
    }

    .ui-pnotify.ui-pnotify-fade-slow {
      transition: opacity .4s linear;
      opacity: 0
    }

    .ui-pnotify.ui-pnotify-fade-slow.ui-pnotify.ui-pnotify-move {
      transition: opacity .4s linear, left .5s ease, top .5s ease, right .5s ease, bottom .5s ease
    }

    .ui-pnotify.ui-pnotify-fade-normal {
      transition: opacity .25s linear;
      opacity: 0
    }

    .ui-pnotify.ui-pnotify-fade-normal.ui-pnotify.ui-pnotify-move {
      transition: opacity .25s linear, left .5s ease, top .5s ease, right .5s ease, bottom .5s ease
    }

    .ui-pnotify.ui-pnotify-fade-fast {
      transition: opacity .1s linear;
      opacity: 0
    }

    .ui-pnotify.ui-pnotify-fade-fast.ui-pnotify.ui-pnotify-move {
      transition: opacity .1s linear, left .5s ease, top .5s ease, right .5s ease, bottom .5s ease
    }

    .ui-pnotify.ui-pnotify-fade-in {
      opacity: 1
    }

    .ui-pnotify .ui-pnotify-shadow {
      -webkit-box-shadow: 0px 6px 28px 0px rgba(0, 0, 0, 0.1);
      -moz-box-shadow: 0px 6px 28px 0px rgba(0, 0, 0, 0.1);
      box-shadow: 0px 6px 28px 0px rgba(0, 0, 0, 0.1)
    }

    .ui-pnotify-container {
      background-position: 0 0;
      padding: .8em;
      height: 100%;
      margin: 0
    }

    .ui-pnotify-container:after {
      content: " ";
      visibility: hidden;
      display: block;
      height: 0;
      clear: both
    }

    .ui-pnotify-container.ui-pnotify-sharp {
      -webkit-border-radius: 0;
      -moz-border-radius: 0;
      border-radius: 0
    }

    .ui-pnotify-title {
      display: block;
      white-space: pre-line;
      margin-bottom: .4em;
      margin-top: 0
    }

    .ui-pnotify.ui-pnotify-with-icon .ui-pnotify-title,
    .ui-pnotify.ui-pnotify-with-icon .ui-pnotify-text {
      margin-left: 24px
    }

    [dir=rtl] .ui-pnotify.ui-pnotify-with-icon .ui-pnotify-title,
    [dir=rtl] .ui-pnotify.ui-pnotify-with-icon .ui-pnotify-text {
      margin-right: 24px;
      margin-left: 0
    }

    .ui-pnotify-title-bs4 {
      font-size: 1.2rem
    }

    .ui-pnotify-text {
      display: block;
      white-space: pre-line
    }

    .ui-pnotify-icon,
    .ui-pnotify-icon span {
      display: block;
      float: left
    }

    [dir=rtl] .ui-pnotify-icon,
    [dir=rtl] .ui-pnotify-icon span {
      float: right
    }

    .ui-pnotify-icon-bs3>span {
      position: relative;
      top: 2px
    }

    .ui-pnotify-icon-bs4>span {
      position: relative;
      top: 4px
    }

    .ui-pnotify-modal-overlay {
      background-color: rgba(0, 0, 0, .4);
      top: 0;
      left: 0;
      position: absolute;
      height: 100%;
      width: 100%;
      z-index: 2
    }

    body>.ui-pnotify-modal-overlay {
      position: fixed;
      z-index: 100041
    }
 
    .form-control {
      line-height: 2 !important;
    }

    .ocultar {
      display: none !important;
    }

    .visible {
      display: block;
    }
  </style>

</head>

<body class="page-body">
  <!-- uiView: -->
  <div class="page-container ng-scope" ui-view="" style="">
    <div class="main-content ng-scope">
      <!-- ngIf: showHeader -->
      <site-header ng-if="showHeader" class="ng-scope">
        <div id="cabecerasitio" class="color-blanco">
          <div class="clearfix">
            <span class="float-left">
              <div id="log-int">
                <img src="https://firebasestorage.googleapis.com/v0/b/intranet-10d95.appspot.com/o/assets%2Flogo-cabecera.png?alt=media&token=2d197f6d-6d72-495f-b820-8816ad1c277b"
                  onClick="javascript:redirecciona('/')" style="cursor:pointer;">

              </div>
            </span>
            <span class="float-right">
              <div id="sett" class="ng-binding">
                <svg class="svg-inline--fa fa-user fa-w-16" aria-hidden="true" data-prefix="fas" data-icon="user" role="img" xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 512 512" data-fa-i2svg="">
                  <path fill="currentColor" d="M256 0c88.366 0 160 71.634 160 160s-71.634 160-160 160S96 248.366 96 160 167.634 0 256 0zm183.283 333.821l-71.313-17.828c-74.923 53.89-165.738 41.864-223.94 0l-71.313 17.828C29.981 344.505 0 382.903 0 426.955V464c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48v-37.045c0-44.052-29.981-82.45-72.717-93.134z"></path>
                </svg>
                <!-- <i class="fas fa-user"></i> -->Hola!
                <span id="usuario"></span> |
                <div class="dropdown" style="float: right;">
                  <button type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="background-color: transparent; color: #fff; border: none; outline: none; cursor: pointer;">
                    <svg class="svg-inline--fa fa-cog fa-w-16" aria-hidden="true" data-prefix="fas" data-icon="cog" role="img" xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 512 512" data-fa-i2svg="">
                      <path fill="currentColor" d="M444.788 291.1l42.616 24.599c4.867 2.809 7.126 8.618 5.459 13.985-11.07 35.642-29.97 67.842-54.689 94.586a12.016 12.016 0 0 1-14.832 2.254l-42.584-24.595a191.577 191.577 0 0 1-60.759 35.13v49.182a12.01 12.01 0 0 1-9.377 11.718c-34.956 7.85-72.499 8.256-109.219.007-5.49-1.233-9.403-6.096-9.403-11.723v-49.184a191.555 191.555 0 0 1-60.759-35.13l-42.584 24.595a12.016 12.016 0 0 1-14.832-2.254c-24.718-26.744-43.619-58.944-54.689-94.586-1.667-5.366.592-11.175 5.459-13.985L67.212 291.1a193.48 193.48 0 0 1 0-70.199l-42.616-24.599c-4.867-2.809-7.126-8.618-5.459-13.985 11.07-35.642 29.97-67.842 54.689-94.586a12.016 12.016 0 0 1 14.832-2.254l42.584 24.595a191.577 191.577 0 0 1 60.759-35.13V25.759a12.01 12.01 0 0 1 9.377-11.718c34.956-7.85 72.499-8.256 109.219-.007 5.49 1.233 9.403 6.096 9.403 11.723v49.184a191.555 191.555 0 0 1 60.759 35.13l42.584-24.595a12.016 12.016 0 0 1 14.832 2.254c24.718 26.744 43.619 58.944 54.689 94.586 1.667 5.366-.592 11.175-5.459 13.985L444.788 220.9a193.485 193.485 0 0 1 0 70.2zM336 256c0-44.112-35.888-80-80-80s-80 35.888-80 80 35.888 80 80 80 80-35.888 80-80z"></path>
                    </svg>
                    <!-- <i class="fas fa-cog"></i> -->
                  </button>
                  <div class="dropdown-menu sub-head men" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="/perfil">Mi Perfil</a>
                    <a class="dropdown-item" href="/usuarios">Usuarios</a>
                    <a class="dropdown-item" href="/roles">Roles</a>
                    <a class="dropdown-item" href="javascript:void(0)" onClick="javascript:cerrarSesion();">Salir</a>
                  </div>
                </div>
                <div class="dropdown" style="float: right; position:relative">
                  <button type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="background-color: transparent; color: #fff; border: none; outline: none; cursor: pointer;">
                    <svg class="svg-inline--fa fa-bell fa-w-14" aria-hidden="true" data-prefix="fa" data-icon="bell" role="img" xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 448 512" data-fa-i2svg="">
                      <path fill="currentColor" d="M433.884 366.059C411.634 343.809 384 316.118 384 208c0-79.394-57.831-145.269-133.663-157.83A31.845 31.845 0 0 0 256 32c0-17.673-14.327-32-32-32s-32 14.327-32 32c0 6.75 2.095 13.008 5.663 18.17C121.831 62.731 64 128.606 64 208c0 108.118-27.643 135.809-49.893 158.059C-16.042 396.208 5.325 448 48.048 448H160c0 35.346 28.654 64 64 64s64-28.654 64-64h111.943c42.638 0 64.151-51.731 33.941-81.941zM224 472a8 8 0 0 1 0 16c-22.056 0-40-17.944-40-40h16c0 13.234 10.766 24 24 24z"></path>
                    </svg>
                    <!-- <i class="fa fa-bell"></i> -->
                  </button>
                  <button class="btn btn-sm btn-danger ng-binding" style="position:absolute; border-radius:15px;top:-10px; right:-10px; padding: 0px 4px;">0</button>
                  <div class="dropdown-menu sub-head" aria-labelledby="dropdownNotificationButton" x-placement="bottom-start" style="position: absolute; transform: translate3d(15px, 21px, 0px); top: 0px; left: 0px; will-change: transform;">
                    <!-- ngRepeat: notificacion in notificaciones -->
                  </div>
                </div>
              </div>
            </span>
          </div>
        </div>
      </site-header>
      <!-- end ngIf: showHeader -->

      <!-- uiView: -->
      <ui-view class="main-content-view ng-scope" style="">
        <div id="gral" class="cont-gral ng-scope">
          <div class="soy90">
            <div class="row">
              <div class="col-md-2 text-center">
                <img class="img100 icono-int" src="https://firebasestorage.googleapis.com/v0/b/intranet-10d95.appspot.com/o/assets%2Ficono03.png?alt=media&token=3ce3c4aa-7213-49d8-abc0-1572cdb8c5b9">
                <div class="col-md-12 color-blanco text-center">
                  <h4>HERRAMIENTAS</h4>
                  <div class="lineadw linea-verde linea-int"></div>
                  <div id="sub-izq" class="row">

                    <div class="" aria-labelledby="dropdownMenuLink">
                      <button class="dropdown-item" type="button" ng-click="goToPath('/app/galeria')">Galeria NC Tech</button>
                      <a href="https://nctech.slack.com/" target="_blank">
                        <button class="dropdown-item" type="button">Chat de negocios</button>
                      </a>
                      <button class="dropdown-item" onClick="javascript:redirecciona('/documentos');" type="button">Plantillas</button>
                      <a href="/newsletter">
                        <button class="dropdown-item" type="button" ng-click="goToPath('/app/newsletter')">Newsletter</button>
                      </a>
                      <a href="https://accounts.google.com/signin/v2/identifier?continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&amp;service=mail&amp;sacu=1&amp;rip=1&amp;flowName=GlifWebSignIn&amp;flowEntry=ServiceLogin"
                        target="_blank">
                        <button class="dropdown-item" type="button">Correo</button>
                      </a>

                    </div>
                  </div>
                  <!--subizq-->
                </div>
              </div>

              <div class="col-md-10 text-center color-blanco">
                <div class="row">
                  <div class="col-md-4 text-left">
                    <button class="btn btn-xs btn-default color-blanco btn-atras" style="background-color: transparent;" onClick="javascript:redirecciona('/minuta');">
                      <svg class="svg-inline--fa fa-arrow-alt-circle-left fa-w-16 fa-2x color-blanco" aria-hidden="true" data-prefix="fa"
                        data-icon="arrow-alt-circle-left" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"
                        data-fa-i2svg="">
                        <path fill="currentColor" d="M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm116-292H256v-70.9c0-10.7-13-16.1-20.5-8.5L121.2 247.5c-4.7 4.7-4.7 12.2 0 16.9l114.3 114.9c7.6 7.6 20.5 2.2 20.5-8.5V300h116c6.6 0 12-5.4 12-12v-64c0-6.6-5.4-12-12-12z"></path>
                      </svg>
                      <!-- <i class="fa fa-arrow-alt-circle-left fa-2x color-blanco"></i> -->
                    </button>
                  </div>
                  <!-- ngIf: !isEdit -->
                  <div class="col-md-4 text-center ng-scope" ng-if="!isEdit">
                    <h3>MINUTA</h3>
                  </div>
                  <!-- end ngIf: !isEdit -->
                  <!-- ngIf: isEdit -->
                  <div class="col-md-4"></div>
                </div>


                <div class="row">
                  <div class="col-md-12">
                    <div id="cabeceraMinuta">
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-12">
                    <div id="participantes">
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-12">
                    <div id="objetivos">
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-12">
                    <div id="actividades">
                    </div>
                    <div id="botoncrear">
                    </div>
                  </div>
                </div>

              </div>
              <!---colmd10-->
            </div>
            <!--row-->
          </div>
          <!--soy90-->
          <!--<div id="log-int2"><img src="assets/images/logotipo-nctech.png"></div>-->
        </div>
        <!--gral-->


        <!--Modal Versionamiento de Procedimiento-->

        <div class="modal ng-scope" tabindex="-1" role="dialog" id="modal-addAsunto">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <div class="col-sm-12 text-center">
                  <h3 class="modal-title" id="modal-title">Agregar Asunto</h3>
                </div>
              </div>
              <div class="modal-body" id="modal-body">
                <div class="row">
                  <div class="col-sm-12">
                    <input type="text" ng-model="asunto" class="form-control ng-pristine ng-untouched ng-valid ng-empty">
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button class="btn btn-danger" type="button" onclick="$('#modal-addAsunto').modal('hide');">CERRAR</button>
                <button class="btn btn-success" type="button" ng-click="saveAsunto()">GUARDAR</button>
              </div>
            </div>
          </div>
        </div>
      </ui-view>

      <!-- ngIf: showFooter -->
      <site-footer ng-if="showFooter" class="ng-scope">
        <div id="pie-sitio">
          <div class="clearfix">
            <div class="float-right color-blanco">Copyright © 2018 NC Tech. All Rights Reserved.</div>
          </div>
        </div>
      </site-footer>
      <!-- end ngIf: showFooter -->
    </div>
  </div>

  <!-- Remove this code if you want to disable Loading Overlay in the beginning of document loading -->
  <div class="page-loading-overlay loaded">
    <div class="loader-2"></div>
  </div>




</body>

</html>

<script>
  firebase.auth().onAuthStateChanged(function (user) {
    if (user) {
      $("#usuario").text(user.displayName);

    } else {
      window.location.href = "/login"
    }
  });



</script>
<script type="text/jsx">


/* Script para obtener los parametros de la URL
*
*/

var getUrlParameter = function getUrlParameter(sParam) {
var sPageURL = decodeURIComponent(window.location.search.substring(1)),
  sURLVariables = sPageURL.split('&'),
  sParameterName,
  i;

for (i = 0; i < sURLVariables.length; i++) {
  sParameterName = sURLVariables[i].split('=');

  if (sParameterName[0] === sParam) {
      return sParameterName[1] === undefined ? true : sParameterName[1];
      }
  }
};

var minutaID = getUrlParameter('id');
$.cookie('minutaid' , minutaID)


class Minutas extends React.Component{
    constructor(props) {
         super(props);
         this.state = {
           data:[],
           interno: "visible",
           externo: "ocultar",
           interno_one: "visible",
           externo_one: "ocultar",
           buttonInterno: "visible",
           buttonExterno: "ocultar"
         }
        this.changeInterno = this.changeInterno.bind(this);
         }
    componentDidMount() {
      firebase.auth().onAuthStateChanged( firebaseUser => {
          if(firebaseUser) {
          var database = firebase.database();
          var user    = firebaseUser.uid;
          var ref = database.ref("usuarios");
              ref.on('child_added', snap => {
              const newReceta = {
                  id: snap.key,
                  data: snap.val(),
              };
              var newArr = this.state.data;
                  newArr.push(newReceta);
                  this.setState({
                       data: this.state.data, arr:newArr
                  });

              });
              }
            });

        }
				componentWillMount() {
		      firebase.auth().onAuthStateChanged( firebaseUser => {
		          if(firebaseUser) {
		          var database = firebase.database();
		          var user    = firebaseUser.uid;
		          var ref = database.ref("minuta").child(minutaID);
		              ref.on('value', snap => {
		              const newReceta = {
		                  id: snap.key,
		                  data: snap.val(),
		              };
									$("#fecha").val(newReceta.data.fecha)
									$("#inicio").val(newReceta.data.inicio)
									$("#fin").val(newReceta.data.fin)
									$("#fw").val(newReceta.data.fw)
									$("#nombre").val(newReceta.data.nombre)
									$("#fechaProximaReunion").val(newReceta.data.fechaProximaReunion)
									$("#organizador").val(newReceta.data.organizador)
									$("#secretario").val(newReceta.data.secretario)
									$.cookie("version", newReceta.data.version )
		            });
								}
							});
		        }
    changeInterno(e){
      this.setState({
        externo: "ocultar",
        interno: ""
      })
    }
    changeExterno(e){
      this.setState({
        interno: "ocultar",
        externo: "visible"
      })
      console.log(e);
    }
    changeInterno_one(e){
      this.setState({
        externo_one: "ocultar",
        interno_one: ""
      })
    }
    changeExterno_one(e){
      this.setState({
        interno_one: "ocultar",
        externo_one: "visible"
      })
      console.log(e);
    }

    render() {
      var click = this.changeInterno.bind(this)
      var click_one = this.changeExterno.bind(this)
      var click_tree = this.changeInterno_one.bind(this)
      var click_two = this.changeExterno_one.bind(this)
      var visible = "form-control " + this.state.externo
      var ocultar = "form-control " + this.state.interno
      var visible_one = "form-control " + this.state.externo_one
      var ocultar_one = "form-control " + this.state.interno_one
      var ocultarBoton =  this.state.externo
      var visibleBoton =  this.state.interno
      var ocultarBoton_one =  this.state.externo_one
      var visibleBoton_one =  this.state.interno_one
      var arr = this.state.data

        var options = arr.map(function(object){
          return  <option value={object.data.url} id="usuarios">{object.data.nombre}</option>
        })
        return (

          <table className="table" style={{backgroundColor: "#FFF"}}>
            <thead>
              <tr>
                <th colSpan="2" className="text-center">MINUTA</th>
                <th colSpan="2" className="text-center">DETALLES DE LA REUNIÓN</th>
                <th colSpan="2" className="text-center">TIEMPO DE REUNIÓN</th>
              </tr>
            </thead>
            <tbody>
              <tr>
              <td>Fecha</td>
              <td>
              <div>
                    <input type="text" className="form-control" id="fecha" disabled/>
                </div>
              </td>
              <td>Inicio</td>
              <td>
                <div className="input-group">
                  <input type="text" className="form-control" id="inicio" disabled/>
                </div>
                </td>
              <td>Término</td>
              <td>
                <div className="input-group">
                  <input type="text" className="form-control" id="fin" disabled/>
                  </div>
              </td>
              </tr>
              <tr>
              <td>FW</td>
              <td>
                <input type="text" className="form-control" id="fw" disabled/>
              </td>
              <td>Nombre</td>
              <td>
                <input type="text" className="form-control" id="nombre" disabled/>
                </td>
              <td>Fecha Proxima Reunion</td>
              <td>
                <div className="input-group date">
                    <input type="date" className="form-control" id="fechaProximaReunion" disabled/>
                </div>
              </td>
              </tr>
              <tr>
              <td>Organizador</td>
              <td>
                <input type="text" className={ocultar} id="organizador" disabled/>
              </td>
              <td>Secretario</td>
              <td  className="ng-scope">
              	<input type="text" className={ocultar_one} id="secretario" disabled/>
              </td>
              </tr>
            </tbody>
          </table>

        )
      }
  }

  ReactDOM.render(
    <Minutas  />,
    document.getElementById('cabeceraMinuta')
  );

  class Participantes extends React.Component{
    constructor(props) {
         super(props);
         this.state = {
           data:[],
           data1:[],
         }

         }
    componentDidMount() {
      firebase.auth().onAuthStateChanged( firebaseUser => {
          if(firebaseUser) {
          var database = firebase.database();
          var user    = firebaseUser.uid;
          var ref = database.ref("usuarios");
              ref.on('child_added', snap => {
              const newReceta = {
                  id: snap.key,
                  data: snap.val(),
              };
              var newArr = this.state.data;
                  newArr.push(newReceta);
                  this.setState({
                       data: this.state.data, arr:newArr
                  });

              });

              }
            });

        }

    componentWillMount(){
      var database = firebase.database();
			var posicion = minutaID.indexOf("_");
			var minutanumero = minutaID.substring(0,posicion);
			var aumento = Number($.cookie("version")) + 1
			var res = minutaID.replace(minutaID, minutanumero + "_Version_" + aumento);
      var ref = database.ref("participantes");
          ref.orderByChild("minutaid").startAt(minutanumero).endAt(minutaID + "\uf8ff").on('child_added', snap => {
          const newReceta = {
              id: snap.key,
              data: snap.val(),
          };
          var newArr = this.state.data1;
              newArr.push(newReceta);
              this.setState({
                   data1: this.state.data1, arr:newArr
              });
              console.log(this.state.data1);
          });
    }


    render() {
        var arra = this.state.data1
        var participantes = arra.map(function(object){
          return <tr ng-repeat="participante in minuta.participantes" className="ng-scope">
                <td>
                {object.data.nombre}
                </td>
                <td>{object.data.puesto}</td>
                <td>{object.data.asistencia}</td>
                <td>
                </td>
              </tr>

        })
        var arr = this.state.data
        var options = arr.map(function(object){
          return  <option value={object.data.url} id="usuarios">{object.data.nombre}</option>
        })
        return (

          <div>
              <table className="table" style={{backgroundColor:"#FFF"}}>
                <thead>
                  <tr>
                    <th className="text-center">NOMBRE</th>
                    <th className="text-center">PUESTO</th>
                    <th className="text-center">ASISTENCIA</th>
                    <th></th>
                  </tr>
                </thead>
                <tbody>
                {participantes}
                </tbody>
              </table>
						</div>

        )
      }
  }

  ReactDOM.render(
    <Participantes  />,
    document.getElementById('participantes')
  );

  class Objetivos extends React.Component{
    constructor(props) {
         super(props);
         this.state = {
           data:[],
           data1:[],
         }

         }


    componentWillMount(){
      var database = firebase.database();
			var posicion = minutaID.indexOf("_");
			var minutanumero = minutaID.substring(0,posicion);
			var aumento = Number($.cookie("version")) + 1
			var res = minutaID.replace(minutaID, minutanumero + "_Version_" + aumento);
      var ref = database.ref("objetivos");
          ref.orderByChild("minutaid").startAt(minutanumero).endAt(minutaID+ "\uf8ff").on('child_added', snap => {
          const newReceta = {
              id: snap.key,
              data: snap.val(),
          };
          var newArr = this.state.data1;
              newArr.push(newReceta);
              this.setState({
                   data1: this.state.data1, arr:newArr
              });
              console.log(this.state.data1);
          });
    }


    render() {
        var arra = this.state.data1
        var participantes = arra.map(function(object){
          return <tr ng-repeat="participante in minuta.participantes" className="ng-scope">
                <td>{object.data.objetivo}</td>
                <td>{object.data.fechaRevision}</td>
                <td>
                </td>
              </tr>

        })

        return (

          <div>
              <table className="table" style={{backgroundColor:"#FFF"}}>
                <thead>
                  <tr>
                    <th className="text-center">OBJETIVO DE LA REUNIÓN</th>
                    <th className="text-center">FECHA DE REVISIÓN</th>
                    <th></th>
                  </tr>
                </thead>
                <tbody>
                {participantes}
                </tbody>
              </table>
						</div>

        )
      }
  }
  ReactDOM.render(
    <Objetivos  />,
    document.getElementById('objetivos')
  );
  class Actividades extends React.Component{
    constructor(props) {
         super(props);
         this.state = {
           data:[],
           data1:[],
         }

         }
    componentDidMount() {

      firebase.auth().onAuthStateChanged( firebaseUser => {
          if(firebaseUser) {
          var database = firebase.database();
          var user    = firebaseUser.uid;
          var ref = database.ref("usuarios");
              ref.on('child_added', snap => {
              const newReceta = {
                  id: snap.key,
                  data: snap.val(),
              };
              var newArr = this.state.data;
                  newArr.push(newReceta);
                  this.setState({
                       data: this.state.data, arr:newArr
                  });

                  var usu = this.state.data.map(function(object){
                    var ar = {email: object.data.correo ,name: object.data.nombre}
                    select(ar);
                    console.log(ar);
                  })
              });

              }
            });
        }
        componentWillMount(){
          var database = firebase.database();
					var posicion = minutaID.indexOf("_");
					var minutanumero = minutaID.substring(0,posicion);
					var aumento = Number($.cookie("version")) + 1
					var res = minutaID.replace(minutaID, minutanumero + "_Version_" + aumento);
          var ref = database.ref("actividades");
              ref.orderByChild("minutaid").startAt(minutanumero).endAt(minutaID + "\uf8ff").on('child_added', snap => {
              const newReceta = {
                  id: snap.key,
                  data: snap.val(),
              };
              var newArr = this.state.data1;
                  newArr.push(newReceta);
                  this.setState({
                       data1: this.state.data1, arr:newArr
                  });
                  console.log(this.state.data1);
                  //
              });
        }

    render() {
      var arra = this.state.data1
      var participantes = arra.map(function(object){
        return <tr ng-repeat="participante in minuta.participantes" className="ng-scope">
              <td>{object.data.responsable}</td>
              <td>{object.data.asunto}</td>
              <td>{object.data.subactividad}</td>
              <td>{object.data.coResponsable}</td>
              <td>{object.data.fechaCompromiso}</td>
              <td>
              </td>
            </tr>

      })
      var arr = this.state.data
      var options = arr.map(function(object){
        return  <option value={object.data.url} id="usuarios">{object.data.nombre}</option>
      })
        return (
          <div>
              <table className="table" style={{backgroundColor:"#FFF"}}>
                <thead>
                  <tr>

                  <th className="text-center">RESPONSABLE</th>
                  <th className="text-center">ASUNTO/MINUTA</th>
                  <th className="text-center">SUB-ACTIVIDAD / DESCRIPCIÓN</th>
                  <th className="text-center">CO-RESPONSABLE</th>
                  <th className="text-center">FECHA COMPROMISO</th>
                  <th></th>
                  </tr>
                </thead>
                <tbody>
                {participantes}
                </tbody>
              </table>
            </div>
        )
      }
  }

  ReactDOM.render(
    <Actividades  />,
    document.getElementById('actividades')
  );






function addParticipante(){
  firebase.auth().onAuthStateChanged( firebaseUser => {
      if(firebaseUser) {
                    var user    = firebaseUser.uid;
                    var nombre = $("#nombreParticipante").val();
                    var puesto = $("#puesto").val();
                    var asistencia = $("#asistencia").val();
                    var minutaid = $("#minutaid").val();
                    var database = firebase.database();
                          var objeto = {
                               nombre: nombre,
                               puesto: puesto,
                               asistencia: asistencia,
                               minutaid: minutaID,
                               usuario: user,
                          }
                         var ref = database.ref("participantes").push();
                         ref.set(objeto)
                        //window.location.href = "/home/invoice"
              }
          });
}
function addObjetivo(){
  firebase.auth().onAuthStateChanged( firebaseUser => {
      if(firebaseUser) {
                    var user    = firebaseUser.uid;
                    var objetivoReunion = $("#objetivoReunion").val();
                    var fechaRevision = $("#fechaRevision").val();
                    var minutaid = $("#minutaid").val();
                    var database = firebase.database();
                          var objeto = {
                               objetivo: objetivoReunion,
                               fechaRevision: fechaRevision,
                               minutaid: minutaID,
                               usuario: user,
                          }
                         var ref = database.ref("objetivos").push();
                         ref.set(objeto)
                        //window.location.href = "/home/invoice"
              }
          });
}
function addActividad(){
  firebase.auth().onAuthStateChanged( firebaseUser => {
      if(firebaseUser) {
                    var user    = firebaseUser.uid;
                    var responsableActividad = $("#ResponsableActividades").val();
                    var asuntoActividad = $("#asuntoMinutaActividades").val();
                    var subActividad = $("#subActividadActividades").val();
                    var coResponsable = $("#select-to").val();
                    var fechaCompromiso = $("#fechaCompromisoActividad").val();
                    var database = firebase.database();
                          var objeto = {
                               responsable: responsableActividad,
                               asunto: asuntoActividad,
                               subactividad: subActividad,
                               coResponsable: coResponsable,
                               fechaCompromiso: fechaCompromiso,
                               minutaid: minutaID,
                               usuario: user,
                          }
                         var ref = database.ref("actividades").push();
                         ref.set(objeto)
                        //window.location.href = "/home/invoice"
              }
          });
}
function addMinuta(){
  firebase.auth().onAuthStateChanged( firebaseUser => {
      if(firebaseUser) {
                    var userName    = firebaseUser.displayName;
                    var user    = firebaseUser.uid;
                    var fecha = $("#fecha").val();
                    var inicio = $("#inicio").val();
                    var fin = $("#fin").val();
                    var fw = $("#fw").val();
                    var nombre = $("#nombre").val();
                    var fechaProximaReunion = $("#fechaProximaReunion").val();
                    var organizador = $("#organizador").val();
                    var secretario = $("#secretario").val();
                    var database = firebase.database();
                          var objeto = {
                               fecha: fecha,
                               inicio: inicio,
                               fin: fin,
                               fw: fw,
                               nombre: nombre,
                               fechaProximaReunion: fechaProximaReunion,
                               organizador: organizador,
                               secretario: secretario,
                               minutaid: minutaID,
                               usuario: userName,
                               usuarioID: user,
                               fechaModificacion: moment().format('LL'),
                               version: Number($.cookie("version")) + Number(1)
                          }
                         var ref = database.ref("minuta").child(minutaID);
                         ref.update(objeto)
                        window.location.href = "/minuta"
              }
          });
}




function select(arrar){
  var REGEX_EMAIL = '([a-z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@' +
                    '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)';
  $('#select-to').selectize({
      persist: false,
      maxItems: null,
      valueField: 'email',
      labelField: 'name',
      searchField: ['name', 'email'],
      options: [
          arrar
      ],
      render: {
          item: function(item, escape) {
              return '<div class="menu">' +
                  (item.name ? '<span class="name">' + escape(item.name) + '</span>' : '') +
                  (item.email ? '<span class="email">' + escape(item.email) + '</span>' : '') +
              '</div>';
          },
          option: function(item, escape) {
              var label = item.name || item.email;
              var caption = item.name ? item.email : null;
              return '<div>' +
                  '<span class="label">' + escape(label) + '</span>' +
                  (caption ? '<span class="caption">' + escape(caption) + '</span>' : '') +
              '</div>';
          }
      },
      createFilter: function(input) {
          var match, regex;

          // email@address.com
          regex = new RegExp('^' + REGEX_EMAIL + '$', 'i');
          match = input.match(regex);
          if (match) return !this.options.hasOwnProperty(match[0]);

          // name <email@address.com>
          regex = new RegExp('^([^<]*)\<' + REGEX_EMAIL + '\>$', 'i');
          match = input.match(regex);
          if (match) return !this.options.hasOwnProperty(match[2]);

          return false;
      },
      create: function(input) {
          if ((new RegExp('^' + REGEX_EMAIL + '$', 'i')).test(input)) {
              return {email: input};
          }
          var match = input.match(new RegExp('^([^<]*)\<' + REGEX_EMAIL + '\>$', 'i'));
          if (match) {
              return {
                  email : match[2],
                  name  : $.trim(match[1])
              };
          }
          alert('Invalid email address.');
          return false;
      }
  });


}
function redirecciona(url){
	window.location.href = url
}
</script>